/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package om.lang.pie

import kotlin.test.Test
import kotlin.test.assertEquals

class InferShould {
    @Test
    fun inferSimpleTypes() {
        assertSynthedTo("0", PiType.Nat)
        assertSynthedTo("1", PiType.Nat)
        assertSynthedTo("Nat", PiType.Set)
        assertSynthedTo("Set", PiType.Set)
    }

    @Test
    fun checkSimpleProgram() {
        assertTypeChecks("""
            (claim a Nat)
            (define a 0)
        """)

        assertTypeChecks("""
            (claim a Nat)
            (define a 0)
            
            (claim b Nat)
            (define b
              (add1 a))
        """)

        assertTypeChecks("""
            (claim a (-> Nat Nat))
            (define a
              (lam (x)
                (add1 x)))
                
            (claim b Nat)
            (define b (a 0))
        """)
    }

    private fun assertSynthedTo(source: String, expected: PiType) {
        val ctx = TypeChecking.emptyCtx
        val sexpr = SExprParser.parseOne(source)
        val expr = SExprToProgram.expr(sexpr)
        assertEquals(expected, TypeChecking.synth(expr, ctx))
    }

    private fun assertTypeChecks(source: String) {
        val sexprs = SExprParser.parseMany(source)
        val program = sexprs.map(SExprToProgram::topLevel)
        TypeChecking.program(program)
    }
}
