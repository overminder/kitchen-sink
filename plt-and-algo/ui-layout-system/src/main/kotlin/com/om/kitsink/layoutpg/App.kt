/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.om.kitsink.layoutpg

import java.awt.Canvas
import java.awt.Color
import java.awt.Dimension
import java.awt.EventQueue
import java.awt.Graphics
import java.awt.Graphics2D
import javax.swing.JFrame

fun mkRootView(dimen: Dimension): ORootViewGroup {
    // Hmm bad if we use ident based map.
    val rectView = ORectView(Color.RED)
    val lp = LayoutParams(
        SizeSpec.Exactly(10),
        SizeSpec.MatchParent
    )
    val rootView = ORootViewGroup(dimen, rectView to )
    return rootView
}

class CanvasAdapter(): Canvas() {
    val rootView: ORootViewGroup
    val layoutContext = LayoutContext()
    init {
        size = Dimension(300, 200)
        rootView = mkRootView(size)
    }

    override fun paint(g: Graphics?) {
        require(g is Graphics2D)
        layoutContext.paint(rootView, g)
    }
}

class MainWindow(title: String) : JFrame() {
    init {
        createUI(title)
    }

    private fun createUI(title: String) {
        this.title = title
        defaultCloseOperation = EXIT_ON_CLOSE
        // Center
        setLocationRelativeTo(null)
        add(CanvasAdapter())
        pack()
    }
}

private fun createAndShowGUI() {
    val frame = MainWindow("Simple")
    frame.isVisible = true
}

fun main() {
    EventQueue.invokeLater(::createAndShowGUI)
}

