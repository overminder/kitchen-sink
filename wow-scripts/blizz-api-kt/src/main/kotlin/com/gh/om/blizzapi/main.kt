/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.gh.om.blizzapi

import com.tylerthrailkill.helpers.prettyprint.pp
import kotlinx.coroutines.runBlocking
import org.tomlj.Toml
import org.tomlj.TomlTable


fun main() {
    val config = Toml.parse(Any::class.java.getResourceAsStream("/config.toml"))
    val client = config["client"] as TomlTable
    val app = DaggerAppComponent.create()
    runBlocking {
        app.bapi.configure(client["id"] as String, client["secret"] as String)
        println(app.bapi.token)

        suspend fun once() {
            val item = app.bapi.getItem("178829")
            pp(item)

            val statAllocCoeff = app.itemScaling.normStat(item)
            val critVal = requireNotNull(item.findStat(Item.Stat.CRIT_RATING)).value
            val critAlloc = (critVal * statAllocCoeff).toInt()
            val scaled = app.itemScaling.scaledStat(item, 200, critAlloc, Item.Stat.CRIT_RATING)
            println("coeff: $statAllocCoeff, critVal = $critVal, critAlloc = $critAlloc, scaled = $scaled")
        }

        once()
        once()
    }
}
