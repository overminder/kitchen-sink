/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.gh.om.blizzapi

import kotlinx.coroutines.runBlocking
import org.junit.After
import org.junit.Before
import java.io.File
import kotlin.test.Test
import kotlin.test.assertEquals
import kotlin.test.assertNull

class SimcReaderTest {
    val simc = SimcSource.Reader(File(Util.expanduser("~/ref/simc")))

    @Test
    fun testReadRandomPropPoints() {
        val randProps = simc.getRandPropPoints()
        assertEquals(1300, randProps.size)
    }

    @Test
    fun testReadCrmTable() {
        val table = simc.getCrmTable()
        assertEquals(1300, table[ItemScaling.CrmType.WEAPON]?.size)
    }
}

class SqliteCacheTest {
    val cache = SqliteCache("test.db")

    @After
    fun tearDown() {
        require(cache.deleteFile())
    }

    @Test
    fun testGetNothing() {
        runBlocking {
            assertNull(cache.get("asdf".toByteArray()))
        }
    }

    @Test
    fun testPutAndGet() {
        runBlocking {
            cache.put("asdf".toByteArray(), "fdsa".toByteArray())
            assertEquals("fdsa", cache.get("asdf".toByteArray())?.decodeToString())
        }
    }
}
